{"version":3,"sources":["components/FeedbackOptions.js","components/Statistics.js","components/Section.js","components/Notification.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","name","index","className","styles","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","review","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAiBeA,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,8BACGD,EAAQE,KAAI,SAACC,EAAMC,GAAP,OACX,wBAEEC,UAAWC,IAAOC,OAClBC,QAAS,kBAAMP,EAAiBE,IAHlC,SAKGA,GAJIC,SCWEK,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAKT,UAAU,aAAf,SACE,gCACE,uCAAUK,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACVC,EAAqB,EACpB,oDAAuBA,EAAvB,OAEA,4DCHOC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKZ,UAAU,aAAf,UACE,6BAAKW,IACJC,MCGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,6BAAKA,OCgEMC,MA7Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KAmBMC,EAAqB,WACzB,OAAOf,EAAOC,EAAUC,GAa1B,OACQ,sBAAKP,UAAU,WAAf,UACE,cAAC,EAAD,CAASW,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEhB,QANS,CAAC,OAAQ,UAAW,OAO7BC,gBApCU,SAACyB,GACvB,OAAQA,GACN,IAAK,OACHJ,GAAQ,SAACK,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHJ,GAAW,SAACI,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHH,GAAO,SAACG,GAAD,OAAeA,EAAY,KAClC,MAEF,QACE,aA0BI,cAAC,EAAD,CAASX,MAAO,aAAhB,SAC4B,IAAzBS,IACC,cAAC,EAAD,CAAcN,QAAS,sBAEvB,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,IACPX,mBAxBqB,IAAPJ,GADdA,EAAOC,EAAUC,WCvBpBgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.141cf691.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div>\n    {options.map((name, index) => (\n      <button\n        key={index}\n        className={styles.button}\n        onClick={() => onLeaveFeedback( name )}\n      >\n        {name}\n      </button>\n    ))}\n  </div>\n);\n\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className=\"Statistics\">\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      {positivePercentage > 0 ? (\n        <p>Positive feedback: {positivePercentage}%</p>\n      ) : (\n        <p>Positive feedback: 0%</p>\n      )}\n    </div>\n  </div>\n);\n\nexport default Statistics;\n","import React from \"react\";\n\nconst Section = ({ title, children }) => (\n  <div className=\"Statistics\">\n    <h1>{title}</h1>\n    {children}\n  </div>\n);\n\nexport default Section;\n","import React from \"react\";\n\nconst Notification = ({ message }) => (\n  <>\n    <h2>{message}</h2>\n  </>\n);\n\nexport default Notification;\n","import { useState } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = (review) => {\n    switch (review) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad\n  };\n\n  \n  const countPositiveFeedbackPercentage = () => {\n    const total = good + neutral + bad;\n    const positivePercentage = (good * 100) / total;\n    return positivePercentage;\n  };\n\n\n  const optionsFeedbac = [\"good\", \"neutral\", \"bad\"];\n\n  return (\n          <div className=\"Feedback\">\n            <Section title={\"Please leave feedback\"}>\n              <FeedbackOptions\n                options={optionsFeedbac}\n                onLeaveFeedback={onLeaveFeedback}\n              />\n            </Section>\n            <Section title={\"Statistics\"}>\n              {countTotalFeedback() === 0 ? (\n                <Notification message={\"No feedback given\"} />\n              ) : (\n                <Statistics\n                  good={good}\n                  neutral={neutral}\n                  bad={bad}\n                  total={countTotalFeedback()}\n                  positivePercentage={countPositiveFeedbackPercentage()}\n                />\n              )}\n            </Section>\n          </div>\n        );\n}\n    \nexport default App;\n\n  \n\n\n\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2sxsf\"};"],"sourceRoot":""}